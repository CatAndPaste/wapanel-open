services:
  base:
    build:
      context: .
      dockerfile: Dockerfile.base
    image: green-base:latest

  green_db:
    image: postgres:16-alpine
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      retries: 5
    networks: [backend]

  alembic:
    build:
      context: .
      dockerfile: Dockerfiles/Dockerfile.alembic
    command: >
      sh -c "
        alembic upgrade head
      "
    volumes:
      - ./alembic/versions:/app/alembic/versions
    working_dir: /app
    env_file: .env
    depends_on:
      green_db:
        condition: service_healthy
      base:
        condition: service_completed_successfully
    networks: [backend]

  app:
    build: ./app
    env_file: .env
    ports: ["8008:8008"]
    restart: always
    depends_on:
      alembic:
        condition: service_completed_successfully
    volumes:
      - ./logs/app:/app/logs
      - ./media:/app/media
    networks:
      - backend
      - public

  admin:
    build: ./admin
    env_file: .env
    ports: ["8009:8009"]
    restart: always
    depends_on:
      alembic:
        condition: service_completed_successfully
    volumes:
      - ./logs/admin:/app/logs
      - ./media:/app/media
    networks:
      - backend
      - public

volumes:
  pgdata:

networks:
  backend:
    internal: true

  public:
    driver: bridge
