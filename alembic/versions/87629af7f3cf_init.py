"""init

Revision ID: 87629af7f3cf
Revises: 
Create Date: 2025-07-24 16:58:47.520066

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '87629af7f3cf'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bot_meta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bot_id', sa.BigInteger(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bot_id')
    )
    op.create_table('chat_tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('color', sa.String(length=7), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tg_channels',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tg_channels_telegram_id'), 'tg_channels', ['telegram_id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('telegram_id', sa.BigInteger(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_2fa_enabled', sa.Boolean(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('is_owner', sa.Boolean(), nullable=False),
    sa.Column('can_manage_users', sa.Boolean(), nullable=False),
    sa.Column('can_manage_instances', sa.Boolean(), nullable=False),
    sa.Column('full_access', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('db_sessions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token_hash', sa.String(length=64), nullable=False),
    sa.Column('csrf_token', sa.String(length=32), nullable=False),
    sa.Column('ip', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token_hash')
    )
    op.create_index('ix_db_sessions_user_created', 'db_sessions', ['user_id', 'created_at'], unique=False)
    op.create_table('instances',
    sa.Column('api_id', sa.BigInteger(), nullable=False),
    sa.Column('api_url', sa.String(), nullable=False),
    sa.Column('media_url', sa.String(), nullable=False),
    sa.Column('api_token', sa.String(), nullable=False),
    sa.Column('telegram_channel_id', sa.Integer(), nullable=False),
    sa.Column('auto_reply', sa.Boolean(), nullable=False),
    sa.Column('auto_reply_text', sa.Text(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('state', sa.Enum('unknown', 'authorized', 'not_authorized', 'blocked', 'starting', 'yellow_card', name='instancestate'), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['telegram_channel_id'], ['tg_channels.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('api_id')
    )
    op.create_table('\n    M2M users - instances\n    user_instance_access',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('instance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'instance_id')
    )
    op.create_table('conversations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instance_id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('is_group', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('pinned', sa.Boolean(), nullable=False),
    sa.Column('unread_inc_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instance_id', 'chat_id', name='uq_conv_instance_chat')
    )
    op.create_index('ix_conv_instance_arch_updated', 'conversations', ['instance_id', 'is_archived', 'updated_at'], unique=False)
    op.create_table('conversation_tags',
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['chat_tags.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('conversation_id', 'tag_id')
    )
    op.create_index('ix_conv_tags_conv', 'conversation_tags', ['conversation_id'], unique=False)
    op.create_index('ix_conv_tags_tag', 'conversation_tags', ['tag_id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instance_id', sa.Integer(), nullable=False),
    sa.Column('wa_message_id', sa.String(), nullable=True),
    sa.Column('tg_message_id', sa.BigInteger(), nullable=True),
    sa.Column('chat_name', sa.String(), nullable=False),
    sa.Column('chat_id', sa.String(), nullable=False),
    sa.Column('from_app', sa.Boolean(), nullable=False),
    sa.Column('direction', sa.Enum('inc', 'out', 'sys', name='messagedirection'), nullable=False),
    sa.Column('message_type', sa.Enum('text', 'file_image', 'file_video', 'file_audio', 'file_doc', 'notification', 'call', 'location', 'contact', name='messagetype'), nullable=False),
    sa.Column('status', sa.Enum('pending', 'sent', 'error_api', 'error_int', 'delivered', 'read', 'incoming', name='messagestatus'), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('quote_id', sa.Integer(), nullable=True),
    sa.Column('is_seen', sa.Boolean(), nullable=False),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('is_auto', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=True),
    sa.Column('text_search', postgresql.TSVECTOR(), sa.Computed("to_tsvector('russian', coalesce(text, ''))", persisted=True), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['instance_id'], ['instances.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['quote_id'], ['messages.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instance_id', 'wa_message_id', name='uq_msg_wa')
    )
    op.create_index(op.f('ix_messages_chat_id'), 'messages', ['chat_id'], unique=False)
    op.create_index(op.f('ix_messages_conversation_id'), 'messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_messages_tg_message_id'), 'messages', ['tg_message_id'], unique=False)
    op.create_index(op.f('ix_messages_wa_message_id'), 'messages', ['wa_message_id'], unique=False)
    op.create_index('ix_msg_conv', 'messages', ['instance_id', 'chat_id', 'created_at'], unique=False, postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.create_index('ix_msg_conv_created_desc', 'messages', ['conversation_id', 'created_at'], unique=False, postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.create_index('ix_msg_inc_unseen', 'messages', ['conversation_id', 'is_seen', 'direction'], unique=False)
    op.create_index('ix_msg_text_search', 'messages', ['text_search'], unique=False, postgresql_using='gin')
    op.create_table('message_files',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('file_type', sa.Enum('image', 'video', 'audio', 'other', name='filetype'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('mime', sa.String(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('file_path', sa.String(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_files_message_id'), 'message_files', ['message_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_message_files_message_id'), table_name='message_files')
    op.drop_table('message_files')
    op.drop_index('ix_msg_text_search', table_name='messages', postgresql_using='gin')
    op.drop_index('ix_msg_inc_unseen', table_name='messages')
    op.drop_index('ix_msg_conv_created_desc', table_name='messages', postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.drop_index('ix_msg_conv', table_name='messages', postgresql_using='btree', postgresql_ops={'created_at': 'DESC'})
    op.drop_index(op.f('ix_messages_wa_message_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_tg_message_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_conversation_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_chat_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index('ix_conv_tags_tag', table_name='conversation_tags')
    op.drop_index('ix_conv_tags_conv', table_name='conversation_tags')
    op.drop_table('conversation_tags')
    op.drop_index('ix_conv_instance_arch_updated', table_name='conversations')
    op.drop_table('conversations')
    op.drop_table('\n    M2M users - instances\n    user_instance_access')
    op.drop_table('instances')
    op.drop_index('ix_db_sessions_user_created', table_name='db_sessions')
    op.drop_table('db_sessions')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_tg_channels_telegram_id'), table_name='tg_channels')
    op.drop_table('tg_channels')
    op.drop_table('chat_tags')
    op.drop_table('bot_meta')
    # ### end Alembic commands ###
